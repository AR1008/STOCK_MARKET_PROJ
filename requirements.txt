# Biocon FDA Project - Python 3.12 Compatible Requirements
# Compatible with Python 3.12.x
# Install with: pip install -r requirements.txt

# Core Data Science Libraries
pandas==2.2.3
numpy==1.26.4 
scipy==1.14.1

# Machine Learning Libraries
scikit-learn==1.5.2
xgboost==2.1.2
lightgbm==4.5.0

# Deep Learning Libraries
tensorflow==2.18.0
torch==2.3.1
transformers==4.46.3

# Financial Data Libraries
yfinance==0.2.64
requests==2.32.3
beautifulsoup4==4.12.3

# News Data Collection
feedparser==6.0.11

# NLP Libraries
textblob==0.18.0.post0
nltk==3.9.1
sentence-transformers==3.2.1
fuzzywuzzy==0.18.0
python-Levenshtein==0.26.0

# Data Visualization
matplotlib==3.9.2
seaborn==0.13.2
pillow==10.4.0

# Utility Libraries
python-dateutil==2.9.0.post0
pytz==2024.2
tqdm==4.67.1
joblib==1.4.2

# Feature Engineering
category-encoders==2.6.4

# Logging
loguru==0.7.2

# CRITICAL DEPENDENCIES FOR YOUR PROJECT:

# Technical Analysis (Essential for stock data script)
TA-Lib==0.6.4
ta==0.11.0

# NSE India Data (For Indian stock market)
nsepy==0.8

# Retry Mechanism (Used in stock data collection)
retry==0.9.2

# File Format Support
openpyxl==3.1.5
xlrd==2.0.1
h5py==3.12.1

# Model Persistence
keras==3.7.0

# Network and HTTP
urllib3==2.2.3
certifi==2024.8.30

# Progress and CLI
click==8.1.7
rich==13.9.4
colorama==0.4.6

# Path Utilities (Python 3.12 compatible)
pathlib  # Built-in module

# Memory Management
psutil==6.1.0

# Statistical Analysis
statsmodels==0.14.4

# Financial Plotting
mplfinance==0.12.10b0

# Database Support
sqlalchemy==2.0.36

# Time Series Analysis
pmdarima==2.0.4

# Model Interpretation
shap==0.46.0

# Hyperparameter Optimization
optuna==4.1.0

# Interactive Visualizations
plotly==5.24.1

# Jupyter Support
jupyter==1.1.1
ipykernel==6.29.5
notebook==7.3.1
jupyterlab==4.3.3
ipywidgets==8.1.5

# Development and Testing
pytest==8.3.4
pytest-cov==6.0.0
black==24.10.0
flake8==7.1.1

# Additional Utility Libraries
six==1.16.0
setuptools==75.6.0
wheel==0.45.1

# Environment Management
python-dotenv==1.0.1

# FIXED VERSION CONFLICTS:

# Financial Data Caching (Fixed version)
yfinance-cache==0.7.12

# Alternative Data Sources (Python 3.12 compatible versions)
pandas-datareader==0.10.0
alpha-vantage==2.3.1

# News API
newsapi-python==0.2.7

# Sentiment Analysis Enhancement
vaderSentiment==3.3.2

# Error Handling
sentry-sdk==2.18.0

# File System Operations
send2trash==1.8.3

# Configuration Management
pyyaml==6.0.2
configparser==7.1.0

# Date and Time Enhancement
arrow==1.3.0

# String Matching (Python 3.12 compatible)
rapidfuzz==3.10.1

# Memory Profiling
memory-profiler==0.61.0

# Performance Monitoring
line-profiler==4.1.3

# Model Versioning (Python 3.12 compatible)
mlflow==2.19.0

# Feature Engineering Enhancement
feature-engine==1.8.0

# Time Series Forecasting (Python 3.12 compatible)
prophet==1.1.6

# Data Pipeline (Python 3.12 compatible)
prefect==3.1.9

# Model Monitoring
evidently==0.4.38

# Documentation
sphinx==8.1.3
sphinx-rtd-theme==3.0.2

# Mathematical Functions
sympy==1.13.1

# Statistical Enhancement
pingouin==0.5.5

# WebSocket for Real-time Data
websocket-client==1.8.0

# API Rate Limiting
ratelimit==2.2.1

# Cryptography and Security
cryptography==43.0.3
pyOpenSSL==24.2.1

# Financial Analysis (Python 3.12 compatible versions)
finta==1.3

# Market Data Enhancement
quandl==3.7.0

# Parallel Processing
multiprocessing-logging==0.3.4

# OPTIONAL LIBRARIES (Install if needed):
# great-expectations==1.2.3  # May have Python 3.12 issues
# investpy==1.0.8            # May have Python 3.12 issues
# polygon-api-client>=1.14.0 # Install separately if needed

# INSTALLATION NOTES:
# 1. TA-Lib installation (most common issue):
#    Windows: Download wheel from https://www.lfd.uci.edu/~gohlke/pythonlibs/#ta-lib
#    macOS: brew install ta-lib && pip install TA-Lib
#    Linux: sudo apt-get install libta-lib-dev && pip install TA-Lib
#
# 2. If TA-Lib fails, the project will fall back to 'ta' library
#
# 3. Download NLTK data after installation:
#    python -c "import nltk; nltk.download('vader_lexicon'); nltk.download('punkt')"
#
# 4. Test installation:
#    python -c "import pandas, numpy, sklearn, tensorflow, yfinance; print('✅ Core working!')"
#
# 5. Test TA-Lib specifically:
#    python -c "import talib; print('✅ TA-Lib working!')"
#    If this fails, 'ta' library will be used as backup