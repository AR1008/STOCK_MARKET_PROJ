2025-06-29 02:05:11,983 - INFO - 🚀 Advanced Model Trainer Initialized
2025-06-29 02:05:11,983 - INFO - 📅 Date Range: 2020-01-01 to 2025-06-29
2025-06-29 02:05:11,983 - INFO - 🏢 Target Company: Biocon
2025-06-29 02:05:11,983 - INFO - 🚀 Starting Advanced Model Training Pipeline...
2025-06-29 02:05:11,983 - INFO - 📊 Loading and preparing data...
2025-06-29 02:05:12,035 - ERROR - ❌ Error preparing data: You are trying to merge on datetime64[ns, UTC+05:30] and datetime64[ns] columns for key 'Date'. If you wish to proceed you should use pd.concat
2025-06-29 02:05:12,035 - ERROR - ❌ Model training failed: You are trying to merge on datetime64[ns, UTC+05:30] and datetime64[ns] columns for key 'Date'. If you wish to proceed you should use pd.concat
2025-06-29 02:06:25,222 - INFO - 🚀 Advanced Model Trainer Initialized
2025-06-29 02:06:25,222 - INFO - 📅 Date Range: 2020-01-01 to 2025-06-29
2025-06-29 02:06:25,222 - INFO - 🏢 Target Company: Biocon
2025-06-29 02:06:25,223 - INFO - 🚀 Starting Advanced Model Training Pipeline...
2025-06-29 02:06:25,223 - INFO - 📊 Loading and preparing data...
2025-06-29 02:06:25,267 - ERROR - ❌ Error preparing data: You are trying to merge on datetime64[ns, UTC+05:30] and datetime64[ns] columns for key 'Date'. If you wish to proceed you should use pd.concat
2025-06-29 02:06:25,267 - ERROR - ❌ Model training failed: You are trying to merge on datetime64[ns, UTC+05:30] and datetime64[ns] columns for key 'Date'. If you wish to proceed you should use pd.concat
2025-06-29 02:08:34,059 - INFO - 🚀 Advanced Model Trainer Initialized
2025-06-29 02:08:34,059 - INFO - 📅 Date Range: 2020-01-01 to 2025-06-29
2025-06-29 02:08:34,059 - INFO - 🏢 Target Company: Biocon
2025-06-29 02:08:34,059 - INFO - 🚀 Starting Advanced Model Training Pipeline...
2025-06-29 02:08:34,059 - INFO - 📊 Loading and preparing data...
2025-06-29 02:08:34,136 - ERROR - ❌ Error preparing data: The DType <class 'numpy.dtypes.DateTime64DType'> could not be promoted by <class 'numpy.dtypes.Float64DType'>. This means that no common DType exists for the given inputs. For example they cannot be stored in a single array unless the dtype is `object`. The full list of DTypes is: (<class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.DateTime64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.DateTime64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>)
2025-06-29 02:08:34,136 - ERROR - ❌ Model training failed: The DType <class 'numpy.dtypes.DateTime64DType'> could not be promoted by <class 'numpy.dtypes.Float64DType'>. This means that no common DType exists for the given inputs. For example they cannot be stored in a single array unless the dtype is `object`. The full list of DTypes is: (<class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.DateTime64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Int64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.DateTime64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.Float64DType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>, <class 'numpy.dtypes.BoolDType'>)
2025-06-29 02:16:41,477 - INFO - 🚀 Advanced Model Trainer Initialized
2025-06-29 02:16:41,477 - INFO - 📅 Date Range: 2020-01-01 to 2025-06-29
2025-06-29 02:16:41,477 - INFO - 🏢 Target Company: Biocon
2025-06-29 02:16:41,477 - INFO - 🚀 Starting Advanced Model Training Pipeline...
2025-06-29 02:16:41,477 - INFO - 📊 Loading and preparing data...
2025-06-29 02:16:41,569 - INFO - ✅ Data prepared: 2071 training samples, 518 test samples
2025-06-29 02:16:41,569 - INFO - 📈 Features selected: 142
2025-06-29 02:16:41,570 - INFO - 🧠 Training linear models...
2025-06-29 02:16:41,596 - INFO - ✅ Linear Regression trained
2025-06-29 02:16:41,673 - INFO - ✅ Ridge Regression trained (best alpha: 100.0)
2025-06-29 02:16:41,756 - INFO - ✅ Lasso Regression trained (best alpha: 0.01)
2025-06-29 02:16:41,756 - INFO - 🌳 Training tree-based models...
2025-06-29 02:24:10,804 - INFO - ✅ Random Forest trained (best params: {'max_depth': 10, 'min_samples_split': 2, 'n_estimators': 100})
2025-06-29 02:27:02,081 - INFO - ✅ Gradient Boosting trained (best params: {'learning_rate': 0.01, 'max_depth': 3, 'n_estimators': 100})
2025-06-29 02:27:44,497 - INFO - ✅ LightGBM trained (best params: {'learning_rate': 0.01, 'n_estimators': 100, 'num_leaves': 31})
2025-06-29 02:27:56,892 - INFO - ✅ XGBoost trained (best params: {'learning_rate': 0.01, 'max_depth': 3, 'n_estimators': 100})
2025-06-29 02:27:56,892 - INFO - 🧠 Training SVR model...
2025-06-29 02:27:58,235 - INFO - ✅ SVR trained (best params: {'C': 0.1, 'epsilon': 0.1, 'kernel': 'rbf'})
2025-06-29 02:27:58,235 - INFO - 🧠 Training LSTM model...
2025-06-29 02:28:02,670 - INFO - ✅ LSTM model trained
2025-06-29 02:28:02,671 - INFO - 🤝 Creating ensemble model...
2025-06-29 02:28:03,014 - INFO - ✅ Ensemble model created
2025-06-29 02:28:03,015 - INFO - 📈 Evaluating model performance...
2025-06-29 02:28:03,502 - INFO - ✅ Model evaluation completed
2025-06-29 02:28:03,503 - INFO - 💾 Saving models and metadata...
2025-06-29 02:28:03,532 - INFO - ✅ Models and metadata saved successfully
2025-06-29 02:28:03,533 - INFO - 🎉 Model training completed successfully!
2025-06-29 02:55:39,034 - INFO - 🚀 Advanced Model Trainer Initialized
2025-06-29 02:55:39,034 - INFO - 📅 Date Range: 2015-01-01 to 2025-06-28
2025-06-29 02:55:39,034 - INFO - 🏢 Target Company: Biocon
2025-06-29 02:55:39,034 - INFO - 🚀 Starting Advanced Model Training Pipeline...
2025-06-29 02:55:39,035 - INFO - 📊 Loading and preparing data...
2025-06-29 02:55:55,470 - INFO - Selected Features: ['Sector_Beta_60D', 'Beta_252D', 'SMA_200', 'Volatility_20', 'Volume_SMA_50', 'VPT', 'Volume_SMA_10', 'Correlation_60D', 'VWAP', 'Price_Momentum_5', 'Volume_SMA_20', 'ADX', 'BB_Width', 'Beta_60D', 'Volatility_30', 'SMA_100', 'Volatility_10', 'Pharma_Close', 'ATR_21', 'OBV', 'MACD', 'PLUS_DI', 'SAR', 'MACD_Histogram', 'EMA_50', 'NiftyPharma_Close', 'RSI_21', 'Support_Distance', 'Resistance_Distance', 'MINUS_DI', 'STOCH_D', 'ATR_14', 'Volume_Lag_3', 'BB_Position', 'MACD_Lag_5', 'BB_Upper', 'CCI', 'Price_Position_50', 'Nifty50_Close', 'Volume_Lag_5', 'RSI_14_Lag_5', 'STOCH_K', 'MACD_Signal', 'SMA_50', 'Nifty_Close', 'Month', 'Volume_Lag_2', 'Gap_Size', 'RSI_14', 'Volume_Lag_1']
2025-06-29 02:55:55,473 - INFO - ✅ Data prepared: 2221 training samples, 368 test samples
2025-06-29 02:55:55,473 - INFO - 📈 Features selected: 50
2025-06-29 02:55:55,474 - INFO - 🧠 Training linear models...
2025-06-29 02:55:55,479 - INFO - ✅ Linear Regression trained
2025-06-29 02:55:55,503 - INFO - ✅ Ridge Regression trained (best alpha: 100.0)
2025-06-29 02:55:55,620 - INFO - ✅ Lasso Regression trained (best alpha: 0.1)
2025-06-29 02:55:55,621 - INFO - 🌳 Training tree-based models...
2025-06-29 02:59:48,977 - INFO - ✅ Random Forest trained (best params: {'max_depth': 10, 'min_samples_split': 2, 'n_estimators': 100})
2025-06-29 03:01:22,529 - INFO - ✅ Gradient Boosting trained (best params: {'learning_rate': 0.01, 'max_depth': 3, 'n_estimators': 100})
2025-06-29 03:02:01,369 - INFO - ✅ LightGBM trained (best params: {'learning_rate': 0.01, 'min_child_samples': 10, 'min_split_gain': 0.0, 'n_estimators': 100, 'num_leaves': 31})
2025-06-29 03:02:11,616 - INFO - ✅ XGBoost trained (best params: {'learning_rate': 0.01, 'max_depth': 3, 'n_estimators': 100})
2025-06-29 03:02:11,617 - INFO - 🧠 Training SVR model...
2025-06-29 03:02:14,046 - INFO - ✅ SVR trained (best params: {'C': 0.1, 'epsilon': 0.1, 'kernel': 'rbf'})
2025-06-29 03:02:14,047 - INFO - 🧠 Training LSTM model...
2025-06-29 03:02:19,746 - INFO - ✅ LSTM model trained
2025-06-29 03:02:19,746 - INFO - 🧠 Note: BERT sentiment model assumes precomputed scores in daily_sentiment.csv
2025-06-29 03:02:19,746 - INFO - 🤝 Creating ensemble model...
2025-06-29 03:02:20,142 - INFO - ✅ Ensemble model created
2025-06-29 03:02:20,143 - INFO - 📈 Evaluating model performance...
2025-06-29 03:02:20,684 - INFO - ✅ Model evaluation completed
2025-06-29 03:02:20,685 - INFO - 💾 Saving models and metadata...
2025-06-29 03:02:20,727 - INFO - ✅ Models and metadata saved successfully
2025-06-29 03:02:20,728 - INFO - 🎉 Model training completed successfully!
2025-06-29 03:33:26,731 - INFO - 🚀 Advanced Model Trainer Initialized
2025-06-29 03:33:26,731 - INFO - 📅 Date Range: 2015-01-01 to 2025-06-28
2025-06-29 03:33:26,731 - INFO - 🏢 Target Company: Biocon
2025-06-29 03:33:26,731 - INFO - 🚀 Starting Advanced Model Training Pipeline...
2025-06-29 03:33:26,731 - INFO - 📊 Loading and preparing data...
2025-06-29 03:33:43,331 - INFO - Selected Features: ['Sector_Beta_60D', 'Beta_252D', 'SMA_200', 'Volatility_20', 'Volume_SMA_50', 'VPT', 'Volume_SMA_10', 'Correlation_60D', 'VWAP', 'Volume_SMA_20', 'Price_Momentum_5', 'Volatility_30', 'BB_Width', 'Beta_60D', 'ADX', 'SMA_100', 'Volatility_10', 'ATR_21', 'PLUS_DI', 'MACD_Histogram', 'OBV', 'Pharma_Close', 'MACD', 'SAR', 'NiftyPharma_Close', 'RSI_21', 'EMA_50', 'Resistance_Distance', 'Support_Distance', 'MINUS_DI', 'ATR_14', 'STOCH_D', 'Volume_Lag_3', 'MACD_Lag_5', 'BB_Position', 'BB_Upper', 'Volume_Lag_5', 'Nifty50_Close', 'CCI', 'RSI_14_Lag_5', 'STOCH_K', 'Price_Position_50', 'Nifty_Close', 'MACD_Signal', 'Month', 'Volume_Lag_2', 'Gap_Size', 'SMA_50', 'RSI_14', 'BB_Lower']
2025-06-29 03:33:43,335 - INFO - ✅ Data prepared: 2221 training samples, 368 test samples
2025-06-29 03:33:43,335 - INFO - 📈 Features selected: 50
2025-06-29 03:33:43,336 - INFO - 🧠 Training linear models...
2025-06-29 03:33:43,339 - INFO - ✅ Linear Regression trained
2025-06-29 03:33:43,404 - INFO - ✅ Ridge Regression trained (best alpha: 100.0)
2025-06-29 03:33:43,527 - INFO - ✅ Lasso Regression trained (best alpha: 0.1)
2025-06-29 03:33:43,527 - INFO - 🌳 Training tree-based models...
2025-06-29 03:37:34,851 - INFO - ✅ Random Forest trained (best params: {'max_depth': 10, 'min_samples_split': 2, 'n_estimators': 100})
2025-06-29 03:39:07,445 - INFO - ✅ Gradient Boosting trained (best params: {'learning_rate': 0.01, 'max_depth': 3, 'n_estimators': 100})
2025-06-29 03:39:44,843 - INFO - ✅ LightGBM trained (best params: {'learning_rate': 0.01, 'min_child_samples': 10, 'min_split_gain': 0.0, 'n_estimators': 100, 'num_leaves': 31})
2025-06-29 03:39:54,372 - INFO - ✅ XGBoost trained (best params: {'learning_rate': 0.01, 'max_depth': 3, 'n_estimators': 100})
2025-06-29 03:39:54,372 - INFO - 🧠 Training SVR model...
2025-06-29 03:39:56,666 - INFO - ✅ SVR trained (best params: {'C': 0.1, 'epsilon': 0.1, 'kernel': 'rbf'})
2025-06-29 03:39:56,667 - INFO - 🧠 Training LSTM model...
2025-06-29 03:40:01,201 - INFO - ✅ LSTM model trained
2025-06-29 03:40:01,201 - INFO - 🧠 Note: BERT sentiment model assumes precomputed scores in daily_sentiment.csv
2025-06-29 03:40:01,201 - INFO - 🤝 Creating ensemble model...
2025-06-29 03:40:01,534 - INFO - ✅ Ensemble model created
2025-06-29 03:40:01,534 - INFO - 📈 Evaluating model performance...
2025-06-29 03:40:02,038 - INFO - ✅ Model evaluation completed
2025-06-29 03:40:02,038 - INFO - 💾 Saving models and metadata...
2025-06-29 03:40:02,086 - INFO - ✅ Models and metadata saved successfully
2025-06-29 03:40:02,087 - INFO - 🎉 Model training completed successfully!
2025-06-29 03:42:07,209 - INFO - 🚀 Advanced Model Trainer Initialized
2025-06-29 03:42:07,209 - INFO - 📅 Date Range: 2015-01-01 to 2025-06-28
2025-06-29 03:42:07,209 - INFO - 🏢 Target Company: Biocon
2025-06-29 03:42:07,209 - INFO - 🚀 Starting Advanced Model Training Pipeline...
2025-06-29 03:42:07,209 - INFO - 📊 Loading and preparing data...
2025-06-29 03:42:23,698 - INFO - Selected Features: ['Sector_Beta_60D', 'Beta_252D', 'SMA_200', 'Volatility_20', 'Volume_SMA_50', 'VPT', 'Volume_SMA_10', 'Correlation_60D', 'VWAP', 'Volume_SMA_20', 'Price_Momentum_5', 'Volatility_30', 'BB_Width', 'Beta_60D', 'ADX', 'SMA_100', 'Volatility_10', 'ATR_21', 'PLUS_DI', 'MACD_Histogram', 'OBV', 'Pharma_Close', 'MACD', 'SAR', 'NiftyPharma_Close', 'RSI_21', 'EMA_50', 'Resistance_Distance', 'Support_Distance', 'MINUS_DI', 'ATR_14', 'STOCH_D', 'Volume_Lag_3', 'MACD_Lag_5', 'BB_Position', 'BB_Upper', 'Volume_Lag_5', 'Nifty50_Close', 'CCI', 'RSI_14_Lag_5', 'STOCH_K', 'Price_Position_50', 'Nifty_Close', 'MACD_Signal', 'Month', 'Volume_Lag_2', 'Gap_Size', 'SMA_50', 'RSI_14', 'BB_Lower']
2025-06-29 03:42:23,703 - INFO - ✅ Data prepared: 2221 training samples, 368 test samples
2025-06-29 03:42:23,703 - INFO - 📈 Features selected: 50
2025-06-29 03:42:23,704 - INFO - 🧠 Training linear models...
2025-06-29 03:42:23,707 - INFO - ✅ Linear Regression trained
2025-06-29 03:42:23,754 - INFO - ✅ Ridge Regression trained (best alpha: 100.0)
2025-06-29 03:42:23,889 - INFO - ✅ Lasso Regression trained (best alpha: 0.1)
2025-06-29 03:42:23,891 - INFO - 🌳 Training tree-based models...
2025-06-29 03:43:29,953 - INFO - 🚀 Advanced Model Trainer Initialized
2025-06-29 03:43:29,954 - INFO - 📅 Date Range: 2015-01-01 to 2025-06-28
2025-06-29 03:43:29,954 - INFO - 🏢 Target Company: Biocon
2025-06-29 03:43:29,954 - INFO - 🚀 Starting Advanced Model Training Pipeline...
2025-06-29 03:43:29,954 - INFO - 📊 Loading and preparing data...
2025-06-29 03:43:46,736 - INFO - Selected Features: ['Sector_Beta_60D', 'Beta_252D', 'SMA_200', 'Volatility_20', 'Volume_SMA_50', 'VPT', 'Volume_SMA_10', 'Correlation_60D', 'VWAP', 'Volume_SMA_20', 'Price_Momentum_5', 'Volatility_30', 'BB_Width', 'Beta_60D', 'ADX', 'SMA_100', 'Volatility_10', 'ATR_21', 'PLUS_DI', 'MACD_Histogram', 'OBV', 'Pharma_Close', 'MACD', 'SAR', 'NiftyPharma_Close', 'RSI_21', 'EMA_50', 'Resistance_Distance', 'Support_Distance', 'MINUS_DI', 'ATR_14', 'STOCH_D', 'Volume_Lag_3', 'MACD_Lag_5', 'BB_Position', 'BB_Upper', 'Volume_Lag_5', 'Nifty50_Close', 'CCI', 'RSI_14_Lag_5', 'STOCH_K', 'Price_Position_50', 'Nifty_Close', 'MACD_Signal', 'Month', 'Volume_Lag_2', 'Gap_Size', 'SMA_50', 'RSI_14', 'BB_Lower']
2025-06-29 03:43:46,740 - INFO - ✅ Data prepared: 2221 training samples, 368 test samples
2025-06-29 03:43:46,740 - INFO - 📈 Features selected: 50
2025-06-29 03:43:46,741 - INFO - 🧠 Training linear models...
2025-06-29 03:43:46,743 - INFO - ✅ Linear Regression trained
2025-06-29 03:43:46,766 - INFO - ✅ Ridge Regression trained (best alpha: 100.0)
2025-06-29 03:43:46,866 - INFO - ✅ Lasso Regression trained (best alpha: 0.1)
2025-06-29 03:43:46,866 - INFO - 🌳 Training tree-based models...
2025-06-29 03:47:32,742 - INFO - ✅ Random Forest trained (best params: {'max_depth': 10, 'min_samples_split': 2, 'n_estimators': 100})
2025-06-29 03:49:05,408 - INFO - ✅ Gradient Boosting trained (best params: {'learning_rate': 0.01, 'max_depth': 3, 'n_estimators': 100})
2025-06-29 03:49:42,877 - INFO - ✅ LightGBM trained (best params: {'learning_rate': 0.01, 'min_child_samples': 10, 'min_split_gain': 0.0, 'n_estimators': 100, 'num_leaves': 31})
2025-06-29 03:49:52,488 - INFO - ✅ XGBoost trained (best params: {'learning_rate': 0.01, 'max_depth': 3, 'n_estimators': 100})
2025-06-29 03:49:52,488 - INFO - 🧠 Training SVR model...
2025-06-29 03:49:54,774 - INFO - ✅ SVR trained (best params: {'C': 0.1, 'epsilon': 0.1, 'kernel': 'rbf'})
2025-06-29 03:49:54,774 - INFO - 🧠 Training LSTM model...
2025-06-29 03:49:59,495 - INFO - ✅ LSTM model trained
2025-06-29 03:49:59,495 - INFO - 🧠 Note: BERT sentiment model assumes precomputed scores in daily_sentiment.csv
2025-06-29 03:49:59,495 - INFO - 🤝 Creating ensemble model...
2025-06-29 03:49:59,833 - INFO - ✅ Ensemble model created
2025-06-29 03:49:59,833 - INFO - 📈 Evaluating model performance...
2025-06-29 03:50:00,229 - INFO - ✅ Model evaluation completed
2025-06-29 03:50:00,229 - INFO - 💾 Saving models and metadata...
2025-06-29 03:50:00,254 - INFO - ✅ Models and metadata saved successfully
2025-06-29 03:50:00,254 - INFO - 🎉 Model training completed successfully!
2025-06-29 03:54:27,246 - INFO - 🚀 Advanced Model Trainer Initialized
2025-06-29 03:54:27,246 - INFO - 📅 Date Range: 2015-01-01 to 2025-06-28
2025-06-29 03:54:27,246 - INFO - 🏢 Target Company: Biocon
2025-06-29 03:54:27,246 - INFO - 🚀 Starting Advanced Model Training Pipeline...
2025-06-29 03:54:27,246 - INFO - 📊 Loading and preparing data...
2025-06-29 03:54:27,308 - ERROR - ❌ Error preparing data: 'sentiment_score'
2025-06-29 03:54:27,308 - ERROR - ❌ Model training failed: 'sentiment_score'
2025-06-29 04:01:20,650 - INFO - 🚀 Advanced Model Trainer Initialized
2025-06-29 04:01:20,650 - INFO - 📅 Date Range: 2015-01-01 to 2025-06-28
2025-06-29 04:01:20,650 - INFO - 🏢 Target Company: Biocon
2025-06-29 04:01:20,650 - INFO - 🚀 Starting Advanced Model Training Pipeline...
2025-06-29 04:01:20,650 - INFO - 📊 Loading and preparing data...
2025-06-29 04:01:20,726 - WARNING - ⚠️ 'sentiment_score' column missing in daily_sentiment.csv
2025-06-29 04:01:20,732 - ERROR - ❌ Error preparing data: You are trying to merge on datetime64[ns, UTC+05:30] and datetime64[ns] columns for key 'Date'. If you wish to proceed you should use pd.concat
2025-06-29 04:01:20,732 - ERROR - ❌ Model training failed: You are trying to merge on datetime64[ns, UTC+05:30] and datetime64[ns] columns for key 'Date'. If you wish to proceed you should use pd.concat
2025-06-29 04:01:31,110 - INFO - 🚀 Advanced Model Trainer Initialized
2025-06-29 04:01:31,110 - INFO - 📅 Date Range: 2015-01-01 to 2025-06-28
2025-06-29 04:01:31,111 - INFO - 🏢 Target Company: Biocon
2025-06-29 04:01:31,111 - INFO - 🚀 Starting Advanced Model Training Pipeline...
2025-06-29 04:01:31,111 - INFO - 📊 Loading and preparing data...
2025-06-29 04:01:31,172 - ERROR - ❌ Error preparing data: 'sentiment_score'
2025-06-29 04:01:31,172 - ERROR - ❌ Model training failed: 'sentiment_score'
2025-06-29 04:01:39,651 - INFO - 🚀 Advanced Model Trainer Initialized
2025-06-29 04:01:39,651 - INFO - 📅 Date Range: 2015-01-01 to 2025-06-28
2025-06-29 04:01:39,651 - INFO - 🏢 Target Company: Biocon
2025-06-29 04:01:39,651 - INFO - 🚀 Starting Advanced Model Training Pipeline...
2025-06-29 04:01:39,651 - INFO - 📊 Loading and preparing data...
2025-06-29 04:01:56,910 - INFO - Selected Features: ['Sector_Beta_60D', 'Beta_252D', 'SMA_200', 'Volatility_20', 'Volume_SMA_50', 'VPT', 'Volume_SMA_10', 'Correlation_60D', 'VWAP', 'Volume_SMA_20', 'Price_Momentum_5', 'Volatility_30', 'BB_Width', 'Beta_60D', 'ADX', 'SMA_100', 'Volatility_10', 'ATR_21', 'PLUS_DI', 'MACD_Histogram', 'OBV', 'Pharma_Close', 'MACD', 'SAR', 'NiftyPharma_Close', 'RSI_21', 'EMA_50', 'Resistance_Distance', 'Support_Distance', 'MINUS_DI', 'ATR_14', 'STOCH_D', 'Volume_Lag_3', 'MACD_Lag_5', 'BB_Position', 'BB_Upper', 'Volume_Lag_5', 'Nifty50_Close', 'CCI', 'RSI_14_Lag_5', 'STOCH_K', 'Price_Position_50', 'Nifty_Close', 'MACD_Signal', 'Month', 'Volume_Lag_2', 'Gap_Size', 'SMA_50', 'RSI_14', 'BB_Lower']
2025-06-29 04:01:56,914 - INFO - ✅ Data prepared: 2221 training samples, 368 test samples
2025-06-29 04:01:56,914 - INFO - 📈 Features selected: 50
2025-06-29 04:01:56,916 - INFO - 🧠 Training linear models...
2025-06-29 04:01:56,920 - INFO - ✅ Linear Regression trained
2025-06-29 04:01:56,980 - INFO - ✅ Ridge Regression trained (best alpha: 100.0)
2025-06-29 04:01:57,215 - INFO - ✅ Lasso Regression trained (best alpha: 0.1)
2025-06-29 04:01:57,215 - INFO - 🌳 Training tree-based models...
